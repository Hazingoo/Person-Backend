(this['webpackJsonpexercise-application'] = this['webpackJsonpexercise-application'] || []).push([[0], {
  41(e, n, t) {
    t.r(n); const c = t(15); const r = t.n(c); const o = t(4); const a = t(2); const i = t(6); const u = t.n(i); const s = t(16); const l = t(3); const h = t.n(l); const j = '/api/persons'; const b = function () { return h.a.get(j).then(((e) => e.data)); }; const d = (function () { const e = Object(s.a)(u.a.mark((function e(n) { let t; let c; return u.a.wrap(((e) => { for (;;) switch (e.prev = e.next) { case 0: return t = j + '/'.concat(n.name), e.next = 3, h.a.delete(t); case 3: return e.sent, e.next = 6, b(); case 6: return c = e.sent, e.abrupt('return', c); case 8: case 'end': return e.stop(); } }), e); }))); return function (n) { return e.apply(this, arguments); }; }()); const f = {
      getAll: b, create(e) { return h.a.post(j, e).then(((e) => e.data)); }, remove: d, change(e, n) { const t = j + '/'.concat(e.name); const c = h.a.patch(t, { number: n }); return console.log('in the changing repsonse function'), c.then(((e) => e.data)); },
    }; const p = t(0); const m = function () { const e = Object(a.useState)([]); const n = Object(o.a)(e, 2); const t = n[0]; const c = n[1]; const r = Object(a.useState)(''); const i = Object(o.a)(r, 2); const u = i[0]; const s = i[1]; const l = Object(a.useState)(''); const h = Object(o.a)(l, 2); const j = h[0]; const b = h[1]; const d = Object(a.useState)(''); const m = Object(o.a)(d, 2); const O = m[0]; const v = m[1]; Object(a.useEffect)((() => { f.getAll().then(((e) => { c(e); })); }), []); return Object(p.jsxs)('div', { children: [Object(p.jsx)('h2', { children: 'Phonebook' }), Object(p.jsx)('h2', { children: 'add a new' }), Object(p.jsxs)('form', { onSubmit(e) { if (e.preventDefault(), t.some(((e) => e.name === u)))window.confirm(''.concat(u, ' is already added to phonebook, replace the old number with new one?')) && f.change(t.find(((e) => e.name === u)), j).then((() => { f.getAll().then(((e) => { c(e); })); })); else { const n = { name: u, number: j }; f.create(n).then((() => { c(t.concat(n)); })); } }, children: [Object(p.jsxs)('div', { children: ['filter shown with', Object(p.jsx)('input', { value: O, onChange(e) { v(e.target.value); } })] }), Object(p.jsxs)('div', { children: ['name: ', Object(p.jsx)('input', { value: u, onChange(e) { s(e.target.value); } })] }), Object(p.jsxs)('div', { children: ['number: ', Object(p.jsx)('input', { value: j, onChange(e) { b(e.target.value); } })] }), Object(p.jsx)('div', { children: Object(p.jsx)('button', { type: 'submit', children: 'add' }) })] }), Object(p.jsx)('h2', { children: 'Numbers' }), t.slice().filter(((e) => e.name.slice(0, O.length).toLowerCase() === O.toLowerCase())).map(((e) => Object(p.jsx)('div', { children: Object(p.jsxs)('p1', { children: [' ', e.name, ' ', e.number, Object(p.jsx)('button', { onClick() { return (function (e) { console.log(e), window.confirm('Do you wish to delete') && f.remove(e).then(((e) => { console.log(e), c(e); })); }(e)); }, children: ' remove' })] }) })))] }); }; const O = document.getElementById('root'); r.a.render(Object(p.jsx)(m, {}), O);
  },
}, [[41, 1, 2]]]);
// # sourceMappingURL=main.bdc4d5d6.chunk.js.map
